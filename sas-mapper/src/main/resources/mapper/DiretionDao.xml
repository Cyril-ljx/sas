<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lingnan.sas.mapper.DiretionDao">

    <resultMap type="com.lingnan.sas.core.entity.Diretion" id="DiretionMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="sid" column="sid" jdbcType="INTEGER"/>
        <result property="diretion" column="diretion" jdbcType="VARCHAR"/>
        <result property="leftTime" column="left_time" jdbcType="VARCHAR"/>
        <result property="backTime" column="back_time" jdbcType="VARCHAR"/>
         <result property="sname" column="sname" jdbcType="VARCHAR"/>
          <result property="remark" column="remark" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="DiretionMap">
        select
          id, sid, diretion, left_time, back_time,remark
        from school_assistant.diretion
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="DiretionMap">
        select
          d.*,s.sname
        from diretion d
        left join student s on d.sid = s.sid
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="DiretionMap">
        select
          id, sid, diretion, left_time, back_time,remark
        from school_assistant.diretion
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="sid != null">
                and sid = #{sid}
            </if>
            <if test="diretion != null and diretion != ''">
                and diretion = #{diretion}
            </if>
            <if test="leftTime != null">
                and left_time = #{leftTime}
            </if>
            <if test="backTime != null">
                and back_time = #{backTime}
            </if>
                <if test="remark != null">
                and remark = #{remark}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into school_assistant.diretion(sid, diretion, left_time, back_time,sname,remark)
        values (#{sid}, #{diretion}, #{leftTime}, #{backTime},#{sname},#{remark})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update school_assistant.diretion
        <set>
            <if test="sid != null">
                sid = #{sid},
            </if>
            <if test="diretion != null and diretion != ''">
                diretion = #{diretion},
            </if>
            <if test="leftTime != null">
                left_time = #{leftTime},
            </if>
            <if test="backTime != null">
                back_time = #{backTime},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from school_assistant.diretion where id = #{id}
    </delete>
    <select id="queryDiretionCount" resultType="java.lang.Integer">
    select count(*) from diretion
</select>
<select id="searchDirection" resultType="HashMap">
select s.sid,s.sname,su.icon,c.classname from student s left join sys_user su on s.sid = su.login_name
left JOIN classinfo c on c.classid = s.classid
left join grade g on g.gid = c.gid
LEFT JOIN teacher t on t.gid = g.gid
where s.sid in(
SELECT d.sid FROM Diretion d)
and c.classid = #{cid}
group by classname,sname
limit #{offset}, #{limit}
</select>
<select id="searchNotDirection" resultType="HashMap">
select s.sid,s.sname,su.icon,c.classname from student s left join sys_user su on s.sid = su.login_name
left JOIN classinfo c on c.classid = s.classid
left join grade g on g.gid = c.gid
LEFT JOIN teacher t on t.gid = g.gid
where s.sid not in(
SELECT d.sid FROM Diretion d)
and c.classid = #{cid}
group by classname,sname
limit #{offset}, #{limit}
</select>
<select id="searchDirectionNum" resultType="HashMap">
select count(DISTINCT(s.sid)) as count,c.classname,c.classid from student s
left JOIN classinfo c on c.classid = s.classid
left join grade g on g.gid = c.gid
LEFT JOIN teacher t on t.gid = g.gid
left join diretion d on d.sid = s.sid
where s.sid in(
SELECT d.sid FROM diretion d )
and t.tid = #{tid}
group by c.classname
limit #{offset}, #{limit}
</select>

<select id="searchNotDirectionNum" resultType="HashMap">
select count(DISTINCT(s.sid)) as count,c.classname,c.classid from student s
left JOIN classinfo c on c.classid = s.classid
left join grade g on g.gid = c.gid
LEFT JOIN teacher t on t.gid = g.gid
left join diretion d on d.sid = s.sid
where s.sid not in(
SELECT d.sid FROM diretion d )
and t.tid = #{tid}
group by c.classname
limit #{offset}, #{limit}
</select>
</mapper>